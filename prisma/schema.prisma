generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}


datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model TeamMember {
  id          String     @id @default(cuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  name        String
  email       String     @unique
  teamName    String?
  teamTricode String?
  discordId   String?
  gameId      String?
  role        String @default("MEMBER")
  passportId  String?
  nationalId  String?
  bankDetails String?
  phone       String?
}

model NewsPost {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String
  description String?
  entity      String?
  link        String?
  date        DateTime?
  published   Boolean   @default(false)
  publishedAt DateTime?
  imageData   Bytes?
  imageMime   String?
}

model FormatScheduleItem {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  link      String?
  imageData Bytes?
  imageMime String?
}

model Partner {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  link      String?
  imageData Bytes?
  imageMime String?
}

model GrandFinal {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  link      String?
  imageData Bytes?
  imageMime String?
}

model Promotion {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  link      String?
  imageData Bytes?
  imageMime String?
}

model MatchSchedule {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  matchDate DateTime
  liveLink  String?
}

model AdminSession {
  id         String   @id // random 64-hex we generate (NOT a JWT)
  userEmail  String
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  revoked    Boolean  @default(false)
  userAgent  String?
  ip         String?

  @@index([userEmail])
  @@index([expiresAt])
}